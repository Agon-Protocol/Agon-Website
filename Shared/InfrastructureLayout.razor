@inherits LayoutComponentBase
@inject KeplrService keplr
@inject DesmosService desmos
@implements IDisposable

<MudLayout>
    @Body
</MudLayout>
<MudThemeProvider DefaultScrollbar="true" Theme="_darkTheme" />
<MudDialogProvider />
<MudSnackbarProvider />

@code {
    private MudTheme _darkTheme = new MudTheme()
        {
            Palette = new Palette()
            {
                Primary = "#f2c711",
                Secondary = Colors.Purple.Default,
                Black = "#27272f",
                Background = "#32333d",
                BackgroundGrey = "#27272f",
                Surface = "#373740",
                DrawerBackground = "#27272f",
                DrawerText = "rgba(255,255,255, 0.50)",
                DrawerIcon = "rgba(255,255,255, 0.50)",
                AppbarBackground = "#27272f",
                AppbarText = "rgba(255,255,255, 0.70)",
                TextPrimary = "rgba(255,255,255, 0.70)",
                TextSecondary = "rgba(255,255,255, 0.50)",
                ActionDefault = "#adadb1",
                ActionDisabled = "rgba(255,255,255, 0.26)",
                ActionDisabledBackground = "rgba(255,255,255, 0.12)",
                Divider = "rgba(255,255,255, 0.12)",
                DividerLight = "rgba(255,255,255, 0.06)",
                TableLines = "rgba(255,255,255, 0.12)",
                LinesDefault = "rgba(255,255,255, 0.12)",
                LinesInputs = "rgba(255,255,255, 0.3)",
                TextDisabled = "rgba(255,255,255, 0.2)"
            },
        };

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        desmos.OnChange += StateHasChanged;
        keplr.OnChange += StateHasChanged;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);

        if (firstRender)
        {
            await keplr.ConnectKeplrAccount();
        }
    }

    public void Dispose()
    {
        desmos.OnChange -= StateHasChanged;
        keplr.OnChange -= StateHasChanged;
    }
 }